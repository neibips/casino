{"version":3,"sources":["assets/icons/solana.png","layout/Container.jsx","BalanceContext.js","layout/Header.jsx","assets/icons/d.svg","assets/icons/m.svg","assets/icons/t.svg","layout/Sidebar.jsx","layout/index.jsx","assets/icons/cross.svg","assets/nft.svg","assets/coin1.gif","components/Popup.jsx","components/Fliping.jsx","pages/Home2.jsx","pages/Users.jsx","components/CrashChart.jsx","pages/Crash.jsx","pages/Faq.jsx","App.js","index.js"],"names":["Container","parentClass","children","className","BalanceContext","createContext","BalanceProvider","balance","setBalance","useState","Provider","value","updateBalance","require","ENDPOINT","socket","Header","isOpen","OnClick","publicKey","useWallet","useContext","console","log","useEffect","io","on","data","userBalance","setUserBalance","userCreation","useLocation","useCallback","async","WalletNotConnectedError","base58","toString","fetch","headers","method","body","JSON","stringify","amount","walletAdress","createUser","then","emit","toBase58","content","setContent","to","smooth","duration","spy","offset","src","solanaCoin","alt","style","width","height","toFixed","onClick","stroke","fill","viewBox","xmlns","d","Sidebar","location","opacity","top","navigations","map","item","i","url","pathname","name","Layout","variable","setVariable","setIsOpen","Popup","popup","setPopup","cross","Fliping","Users","SomeChart","chartData","chartOptions","type","options","Crash","connection","useConnection","sendTransaction","useMemo","crashCount","setCrashCount","factor","setFactor","timerBack","setTimerBack","factorStyle","setFactorStyle","betValue","setBetValue","disabled","setDisabled","takeButtonText","setTakeButtonText","connected","setConnected","playerActive","setPlayerActive","canTake","setCanTake","setChartData","datasets","setChartOptions","sum","setSum","popup2","setPopup2","arrLastGames","setArrLastGames","finalFactor","running","canvas","ctx","arr","document","querySelector","getContext","strokeStyle","lineWidth","msg","messages","getElementById","createElement","classList","add","textContent","wallet","slice","text","appendChild","script1","script2","start","speed","undefined","bid","toast","window","addEventListener","onFocus","removeEventListener","timer","setInterval","clearInterval","beginPath","crashGameFactor","fillRect","Math","pow","fillStyle","setTimeout","clearRect","push","sendToChart","labels","label","concat","backgroundColor","borderColor","color","pointRadius","borderDash","lineTension","events","maintainAspectRatio","elements","line","tension","scales","yAxes","title","display","min","max","ticks","maxTicksLimit","callback","index","values","parseFloat","grid","xAxes","plugins","legend","animation","x","easing","from","delay","y","loop","onSubmit","e","preventDefault","money","result","json","bob","user","notify","walletAddress","notifu","ref_payer","Keypair","fromSecretKey","bs58","wallet1","NodeWallet","Connection","provider","AnchorProvider","ts5","Transaction","SystemProgram","transfer","fromPubkey","toPubkey","lamports","LAMPORTS_PER_SOL","sendAndConfirm","htmlFor","id","placeholder","onChange","target","PublicKey","transaction","context","slot","minContextSlot","blockhash","lastValidBlockHeight","getLatestBlockhashAndContext","signature","confirmTransaction","justifyContent","textAlign","position","game","autoComplete","ComingSoon","App","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletExtensionWallet","getSolletWallet","getTorusWallet","ConnectionProvider","endpoint","WalletProvider","autoConnect","exact","path","element","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.1c0a425f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/solana.64b7d544.png\";","import React from \"react\";\r\n\r\nconst Container = ({ parentClass, children}) => {\r\n  return (\r\n    <div className={parentClass + \"_container\"}>\r\n      <div className=\"page_container\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-11 col-md-12 mx-auto\">{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import {createContext, useState} from 'react';\r\n\r\nconst BalanceContext = createContext(() => 0);\r\n\r\nexport function BalanceProvider({children}){\r\n\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    const updateBalance = (value) => {\r\n        setBalance(value)\r\n    }\r\n\r\n    return(\r\n        <BalanceContext.Provider value={{balance, updateBalance}}>{children}</BalanceContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BalanceContext;\r\n","import React, {useCallback, useEffect, useState, useContext} from \"react\";\r\nimport io from 'socket.io-client';\r\nimport data from \"./navigations.json\";\r\nimport solanaCoin from \"../assets/icons/solana.png\"\r\n\r\n// IMPORTS\r\nimport Container from \"./Container\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {useWallet} from '@solana/wallet-adapter-react';\r\nimport {WalletNotConnectedError} from '@solana/wallet-adapter-base';\r\nimport {WalletMultiButton} from '@solana/wallet-adapter-react-ui';\r\nimport BalanceContext from \"../BalanceContext\";\r\n\r\n// Default styles that can be overridden by your app\r\nrequire('@solana/wallet-adapter-react-ui/styles.css');\r\n\r\n// http://localhost:4000/\r\n// http://194.67.111.233:4000/\r\nconst ENDPOINT = \"https://tinyinvader.herokuapp.com/\"\r\nlet socket;\r\n\r\nconst Header = ({ isOpen, OnClick }) => {\r\n    //WALLET PUBLIC KEY\r\n    const { publicKey } = useWallet();\r\n\r\n    const {balance, updateBalance} = useContext(BalanceContext)\r\n    console.log(balance)\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT)\r\n        socket.on('update balance', (data) => {\r\n            console.log('aaaaa')\r\n            updateBalance(data)\r\n        })\r\n    }, [])\r\n\r\n    const [userBalance, setUserBalance] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if(publicKey) {\r\n            userCreation()\r\n        }\r\n    }, [publicKey])\r\n    const location = useLocation()\r\n\r\n\r\n\r\n    const userCreation = useCallback(async () => {\r\n        if (!publicKey) throw new WalletNotConnectedError();\r\n\r\n        const createUser = async () => {\r\n            const base58 = publicKey.toString()\r\n            await fetch(ENDPOINT,\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({amount: 0, walletAdress: base58})\r\n                })\r\n        }\r\n        createUser().then(() => {\r\n            socket.emit('request balance', publicKey.toBase58())\r\n        })\r\n    }, [publicKey]);\r\n\r\n\r\n  const [content, setContent] = useState('Connect');\r\n  return (\r\n      <Container parentClass=\"header\">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n              <div>\r\n                  <Link\r\n                      className=\"text-decoration-none text-white pointer\"\r\n                      to=\"/\"\r\n                      smooth={true}\r\n                      duration={600}\r\n                      spy={true}\r\n                      offset={-800}\r\n                  ><h3 className=\"bigName mb-0\">Tiny Invaders casino</h3></Link>\r\n              </div>\r\n\r\n              {/*navigation*/}\r\n              {/*<ul className=\"d-none d-md-flex list-unstyled gap-4 gap-md-5 mb-0 pe-md-5 me-md-5\">\r\n                  {data.navigations.map((prev, i) => {\r\n                      return (\r\n                          <Link\r\n                              to={prev.url}\r\n                              key={i}\r\n                              className={`${\r\n                                  location.pathname === prev.url && \"fw-bold\"\r\n                              } text-decoration-none text-white pointer`}\r\n                          >\r\n                              <li>{prev.name}</li>\r\n                          </Link>\r\n                      );\r\n                  })}\r\n              </ul>*/}\r\n              <div className=\"placeForBalance right_btn mx-0\">\r\n                  <div>\r\n                      <img src={solanaCoin} className='mx-1' alt=\"\" style={{\r\n                          width: '35px',\r\n                          height: '35px',\r\n                      }}/>\r\n                  </div>\r\n                  <div className=\"balanceWrapper\">\r\n                      <p className=\"balanceText\">{balance.toFixed(5)}</p>\r\n                      <p className=\"coinText\">SOL</p>\r\n                  </div>\r\n              </div>\r\n              <div className=\"right_btn\">\r\n                  <WalletMultiButton />\r\n              </div>\r\n              <div className=\"d-block d-md-none\">\r\n                              {(isOpen && (\r\n                                  <svg\r\n                                      onClick={OnClick}\r\n                                      stroke=\"#fff\"\r\n                                      fill=\"#fff\"\r\n                                      stroke-width=\"0\"\r\n                                      viewBox=\"0 0 352 512\"\r\n                                      height=\"2.5em\"\r\n                                      width=\"2.5em\"\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  >\r\n                                      <path d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"></path>\r\n                                  </svg>\r\n                              )) || (\r\n                                  <svg\r\n                                      onClick={OnClick}\r\n                                      stroke=\"#fff\"\r\n                                      fill=\"#fff\"\r\n                                      stroke-width=\"0\"\r\n                                      viewBox=\"0 0 512 512\"\r\n                                      height=\"2.5em\"\r\n                                      width=\"2.5em\"\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  >\r\n                                      <path d=\"M32 96v64h448V96H32zm0 128v64h448v-64H32zm0 128v64h448v-64H32z\"></path>\r\n                                  </svg>\r\n                              )}\r\n                          </div>\r\n                      </div>\r\n                  </Container>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/d.b2fc6d9f.svg\";","export default __webpack_public_path__ + \"static/media/m.3881955c.svg\";","export default __webpack_public_path__ + \"static/media/t.60f28096.svg\";","import React from \"react\";\r\nimport data from \"./navigations.json\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst Sidebar = ({ isOpen, OnClick }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div\r\n      onClick={OnClick}\r\n      style={{\r\n        opacity: `${isOpen ? \"1\" : \"0\"}`,\r\n        top: `${isOpen ? \"0%\" : \"-100%\"}`,\r\n      }}\r\n      className=\"SideBarContainer\"\r\n    >\r\n      <ul>\r\n        {data.navigations.map((item, i) => {\r\n          return (\r\n            <li className=\"fw600 text-white f28 pointer\" key={i}>\r\n              <Link\r\n                to={item.url}\r\n                className={`${\r\n                  location.pathname === item.url && \"fw-bold\"\r\n                } text-decoration-none text-white pointer`}\r\n              >\r\n                {item.name}\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, {useState} from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Layout = ({ children, variable, setVariable}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const OnClick = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  return (\r\n    <>\r\n      <Header OnClick={OnClick} isOpen={isOpen} variable={variable} setVariable={setVariable}/>\r\n      <Sidebar OnClick={OnClick} isOpen={isOpen} />\r\n      <div className=\"header_bottom\"/>\r\n      {children}\r\n      {/*<Footer />*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","export default __webpack_public_path__ + \"static/media/cross.e3309d08.svg\";","export default __webpack_public_path__ + \"static/media/nft.516df91c.svg\";","export default __webpack_public_path__ + \"static/media/coin1.8bd8be40.gif\";","import React from \"react\";\r\nimport cross from \"../assets/icons/cross.svg\";\r\n\r\nconst Popup = ({ children, popup, setPopup }) => {\r\n  if (!popup) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <div className=\"popup-inner\">\r\n        <img\r\n          onClick={() => setPopup(false)}\r\n          className=\"cross\"\r\n          src={cross}\r\n          alt=\"\"\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport cross from \"../assets/icons/cross.svg\";\r\n\r\nconst Fliping = ({ children, popup, setPopup }) => {\r\n    if (!popup) {\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup-container\">\r\n            <div className=\"popup-inner\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Fliping;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Layout from \"../layout\";\r\nimport Container from \"../layout/Container\";\r\nimport TimeAgo from \"javascript-time-ago\";\r\nimport en from 'javascript-time-ago/locale/en'\r\n// Default styles that can be overridden by your app\r\nrequire('@solana/wallet-adapter-react-ui/styles.css');\r\n\r\n\r\n\r\nconst Home2 = () => {\r\n  let counter = 0;\r\n  let counter2 = 0;\r\n  TimeAgo.addLocale(en);\r\n  const timeAgo = new TimeAgo(\"en-US\");\r\n\r\n\r\n  useEffect(() => {\r\n    counter = 0\r\n    counter2 = 0\r\n    fetchItems()\r\n  }, [])\r\n  const [games, setGames] = useState([{amount: 100, walletAdress: '2123', result: true, timeStamp: 12}])\r\n  const fetchItems = async () => {\r\n    let data;\r\n    const gamess = await fetch('https://casinoghostbackend.herokuapp.com/').then(result => {\r\n      data = result.clone().json()\r\n      return result\r\n    })\r\n\r\n    data = await gamess.json().then((dd) => {\r\n      return dd\r\n    })\r\n    console.log(data);\r\n    setGames(data);\r\n  }\r\n  return (\r\n\r\n\r\n\r\n            <Layout>\r\n              <Container parentClass=\"body_home2\" >\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center text-uppercase mt-4\">\r\n                  <h1 className=\"display-5 fw-bold\">‘double or nothin’</h1>\r\n                </div>\r\n\r\n                <div className=\"body_home_container mt-5 mb-5\">\r\n                  <div className=\"d-flex align-items-center gap-4\">\r\n                    <div className=\"light_line_recent\"></div>\r\n                    <h3 className=\"\">RECENT PLAYS</h3>\r\n                    <div className=\"light_line_recent\"></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row mb-5\">\r\n                  <div className=\"col-12 col-lg-11 mx-auto\">\r\n                    <div className=\"row gy-5\">\r\n                      <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"row gy-3\">\r\n                          {games.map((game) => {\r\n                            if(game.result === true) {\r\n                              counter ++\r\n                            }\r\n                            if(game.result === true && counter <= 5){\r\n                              let inSeconds;\r\n                              if(game.timeStamp !== undefined) {\r\n                                inSeconds = new Date(game.timeStamp).getTime();\r\n                              }else {\r\n                                inSeconds = new Date(Date.now()).getTime();\r\n                              }\r\n                              const minutesAgo = timeAgo.format(inSeconds - 60 * 1000);\r\n                              return (\r\n                                  <div className=\"col-12\">\r\n                                    <div className=\"recent_plays_card\">\r\n                                      <div className=\"row align-items-center\">\r\n                                        <div className=\"col-8\">\r\n                                          <div className=\"row align-items-center\">\r\n                                            <div className=\"col-3\">\r\n                                              <svg\r\n                                                  className=\"w-100\"\r\n                                                  width=\"57\"\r\n                                                  height=\"56\"\r\n                                                  viewBox=\"0 0 77 76\"\r\n                                                  fill=\"none\"\r\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                              >\r\n                                                <rect\r\n                                                    x=\"0.666016\"\r\n                                                    y=\"0.450623\"\r\n                                                    width=\"75.4499\"\r\n                                                    height=\"75.4499\"\r\n                                                    rx=\"11\"\r\n                                                    fill=\"#D9D9D9\"\r\n                                                />\r\n                                              </svg>\r\n                                            </div>\r\n                                            <div className=\"col-9 ps-0\">\r\n                                              <p className=\"mb-0\">\r\n                                                {game.walletAdress.slice(0, 4) + '..' + game.walletAdress.slice(-4)}... flipped {game.amount} and got\r\n                                              </p>\r\n                                              <p className=\"small mb-0\">{minutesAgo}</p>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"col-4\">\r\n                                          <button className=\"w-100 fw-bold doubled_btn border-0 py-2\">\r\n                                            DOUBLED\r\n                                          </button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>);\r\n                            }\r\n                          })}\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"row gy-3\">\r\n                          {games.map((game) => {\r\n                            if(game.result === false) {\r\n                              counter2 ++\r\n                            }\r\n                            if (game.result === false && counter2 <= 5) {\r\n                              let inSeconds;\r\n                              if(game.timeStamp !== undefined) {\r\n                                inSeconds = new Date(game.timeStamp).getTime();\r\n                              }else {\r\n                                inSeconds = new Date(Date.now()).getTime();\r\n                              }\r\n                              const minutesAgo = timeAgo.format(inSeconds - 60 * 1000);\r\n                              return (\r\n                                  <div className=\"col-12\">\r\n                                    <div className=\"recent_plays_card\">\r\n                                      <div className=\"row align-items-center\">\r\n                                        <div className=\"col-8\">\r\n                                          <div className=\"row align-items-center\">\r\n                                            <div className=\"col-3\">\r\n                                              <svg\r\n                                                  className=\"w-100\"\r\n                                                  width=\"57\"\r\n                                                  height=\"56\"\r\n                                                  viewBox=\"0 0 77 76\"\r\n                                                  fill=\"none\"\r\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                              >\r\n                                                <rect\r\n                                                    x=\"0.666016\"\r\n                                                    y=\"0.450623\"\r\n                                                    width=\"75.4499\"\r\n                                                    height=\"75.4499\"\r\n                                                    rx=\"11\"\r\n                                                    fill=\"#D9D9D9\"\r\n                                                />\r\n                                              </svg>\r\n                                            </div>\r\n                                            <div className=\"col-9 ps-0\">\r\n                                              <p className=\"mb-0\">\r\n                                                {game.walletAdress.slice(0, 4) + '..' + game.walletAdress.slice(-4)} and got\r\n                                              </p>\r\n                                              <p className=\"small mb-0\">{minutesAgo}</p>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"col-4\">\r\n                                          <button className=\"w-100 fw-bold rugged_btn border-0 py-2\">\r\n                                            RUGGED\r\n                                          </button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                              );\r\n                            }\r\n\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Container>\r\n            </Layout>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Home2;\r\n","import React from \"react\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport Layout from \"../layout\";\r\nimport Container from \"../layout/Container\";\r\n\r\nconst Users = () => {\r\n  return (\r\n      <Layout>\r\n        <Container parentClass=\"body-coming-soon\">\r\n          <h1 className=\"text-center py-5 my-5 display-4\">Coming Soon</h1>\r\n        </Container>\r\n      </Layout>\r\n    /*<Layout>\r\n      <Container parentClass=\"body-users\">\r\n        <div className=\"form-select-container mt-4\">\r\n          <select\r\n            className=\"form-select active_btn text-white fw-light px-4\"\r\n            aria-label=\"Default select example\"\r\n          >\r\n            <option className=\"text-dark\" value=\"1\">\r\n              RECENT\r\n            </option>\r\n            <option className=\"text-dark\" value=\"2\">\r\n              LIVE\r\n            </option>\r\n            <option className=\"text-dark\" value=\"3\">\r\n              TOP\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mt-5 mt-md-0\">\r\n          <h1 className=\"display-5 text-uppercase text-center fw-bold\">\r\n            <span className=\"color3\">57</span> Active Flippers\r\n          </h1>\r\n          <p className=\"text-center text-uppercase h5 mt-4 fw-bold\">\r\n            These users have done at least one flip in the last 20 minutes.\r\n          </p>\r\n          <br />\r\n          <br className=\"d-none d-md-block\" />\r\n          <hr />\r\n          <br className=\"d-none d-md-block\" />\r\n          <br />\r\n          <div className=\"row gx-4 gy-5 gx-md-5\">\r\n            <div className=\"col-12 col-lg-6\">\r\n              <div className=\"row gx-3 gx-md-5 gy-3 gy-md-4\">\r\n                {[1, 1, 1, 1, 1, 1].map((res, i) => {\r\n                  return (\r\n                    <div key={i} className=\"col-6\">\r\n                      <UserCard won />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-lg-6\">\r\n              <div className=\"row gx-3 gx-md-5 gy-3 gy-md-4\">\r\n                {[1, 1, 1, 1, 1, 1].map((res, i) => {\r\n                  return (\r\n                    <div key={i} className=\"col-6\">\r\n                      <UserCard lost />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </Container>\r\n    </Layout>*/\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nimport 'chart.js/auto';\r\nimport { Chart, Line } from 'react-chartjs-2';\r\nimport moment from \"moment\";\r\nimport 'chartjs-adapter-moment'\r\n\r\n\r\n\r\n\r\nfunction SomeChart({ chartData, chartOptions }) {\r\n    return (\r\n        <>\r\n            <div >\r\n                <Chart type='line' data={chartData} options={chartOptions} />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SomeChart\r\n\r\n\r\n","import React, {useContext, useEffect, useMemo, useState} from \"react\";\r\nimport Layout from \"../layout\";\r\nimport Container from \"../layout/Container\";\r\nimport io from 'socket.io-client';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useConnection, useWallet} from '@solana/wallet-adapter-react';\r\nimport BalanceContext from \"../BalanceContext\";\r\nimport SomeChart from \"../components/CrashChart\";\r\nimport Popup from \"../components/Popup\"\r\nimport * as bs58 from \"bs58\";\r\nimport {WalletNotConnectedError} from '@solana/wallet-adapter-base';\r\nimport {AnchorProvider} from \"@project-serum/anchor\";\r\nimport {\r\n  clusterApiUrl,\r\n  Connection,\r\n  Keypair,\r\n  LAMPORTS_PER_SOL,\r\n  PublicKey,\r\n  SystemProgram,\r\n  Transaction,\r\n} from \"@solana/web3.js\";\r\nimport NodeWallet from \"@project-serum/anchor/dist/cjs/nodewallet\";\r\n\r\n// http://localhost:4000/\r\n// http://194.67.111.233:4000/\r\nconst ENDPOINT = \"https://tinyinvader.herokuapp.com/\"\r\nlet socket;\r\n\r\n\r\nconst Crash = () => {\r\n  const { connection } = useConnection();\r\n  const { publicKey, sendTransaction } = useWallet();\r\n  const base58 = useMemo(() => publicKey?.toBase58(), [publicKey]);\r\n\r\n  const [crashCount, setCrashCount] = useState(0);\r\n  const [factor, setFactor] = useState(0);\r\n  const [timerBack, setTimerBack] = useState(0)\r\n  const [factorStyle, setFactorStyle] = useState('white')\r\n  const [betValue, setBetValue] = useState(0)\r\n  const [disabled, setDisabled] = useState(true)\r\n  const [takeButtonText, setTakeButtonText] = useState('waiting for game...')\r\n  const [connected, setConnected] = useState(true);\r\n  const [playerActive, setPlayerActive] = useState(false)\r\n  const [canTake, setCanTake] = useState(false)\r\n  const [chartData, setChartData] = useState({ datasets: [], });\r\n  const [chartOptions, setChartOptions] = useState({});\r\n  const [sum, setSum] = useState(0.001)\r\n  const [popup, setPopup] = useState(false)\r\n  const [popup2, setPopup2] = useState(false)\r\n  const [arrLastGames, setArrLastGames] = useState([{finalFactor: 1}])\r\n\r\n  let running = false\r\n  const {balance, updateBalance} = useContext(BalanceContext);\r\n  let canvas;\r\n  let ctx;\r\n  let finalFactor = 0\r\n  const arr = []\r\n\r\n  useEffect(() => {\r\n    canvas = document.querySelector('#canvas');\r\n    ctx = canvas.getContext('2d');\r\n    ctx.strokeStyle = 'red';\r\n    ctx.lineWidth = 5;\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT)\r\n    socket.on('connection', () => setConnected(true))\r\n    socket.on('chat message', function(msg) {\r\n      const messages = document.getElementById('messages');\r\n      var item = document.createElement('li');\r\n      item.classList.add('colorMain');\r\n      item.textContent = msg.wallet.slice(0, 4) +'...' + msg.wallet.slice(-4) + ': ' + msg.text\r\n      messages.appendChild(item)\r\n    });\r\n    socket.on('timer', (data) => {\r\n      if (!running){\r\n        script1(data)\r\n      }\r\n    })\r\n    socket.on('game', (data) => {\r\n      script2(data.start, data.speed)\r\n    })\r\n    socket.on('getUserAccount', (data) => {\r\n      if(data.bid !== undefined){\r\n        setPlayerActive(true)\r\n      }\r\n    })\r\n    socket.on('final factor', (data) => {\r\n      finalFactor = data\r\n    })\r\n    socket.on('bid accepted', (data) => {\r\n      setPlayerActive(true)\r\n      const notify = () => toast(data)\r\n      notify()\r\n    })\r\n    socket.on('bid error', (data) => {\r\n      const notify = () => toast(data)\r\n      notify()\r\n    })\r\n    socket.on('winwin', (data) => {\r\n      const notify = () => toast(`You win `)\r\n      notify()\r\n    })\r\n    socket.on('update balance', (data) => {\r\n      updateBalance(data)\r\n    })\r\n    socket.on('update balance2', (data) => {\r\n      updateBalance(data)\r\n    })\r\n    socket.on('update balance1', (data) => {\r\n      updateBalance(data)\r\n    })\r\n    socket.on('last games', (data) => {\r\n      setArrLastGames(data)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"focus\", onFocus);\r\n    return () => {\r\n      window.removeEventListener(\"focus\", () => console.log());\r\n\r\n    };\r\n  }, []);\r\n\r\n  const onFocus = () => {\r\n    socket.emit('updateWindow', 'window updated')\r\n  }\r\n\r\n  const script1 = (timer) => {\r\n    socket.on('update timer', (data) => {\r\n      timer = data\r\n    })\r\n      running = true\r\n      setDisabled(false)\r\n      setCanTake(false)\r\n      const timerBack = setInterval(() => {\r\n        if (timer > 0){\r\n          timer -= 0.1\r\n          setTimerBack(timer.toFixed(1))\r\n        }else {\r\n          clearInterval(timerBack)\r\n          timer = 10\r\n          setDisabled(true)\r\n          script2(1, 1)\r\n          setTakeButtonText('take')\r\n        }\r\n      }, 100)\r\n  }\r\n\r\n  const script2 = (start, speed) => {\r\n    socket.on('update game', (data) => {\r\n      console.log('game updated')\r\n      start = data.start\r\n      speed = data.speed\r\n    })\r\n    const gameFactor = 0.01\r\n    ctx.beginPath();\r\n    setCanTake(true)\r\n    const crashGameFactor = setInterval(() => {\r\n      if (finalFactor === 0){\r\n        start += gameFactor * speed\r\n        speed += gameFactor\r\n        ctx.fillRect(start*80,300-Math.pow(start * 3,2),4,4);\r\n        setFactor(start.toFixed(2))\r\n        ctx.fillStyle=\"white\";\r\n      }else{\r\n        clearInterval(crashGameFactor)\r\n        setDisabled(false)\r\n        setCanTake(false)\r\n        setFactor(finalFactor.toFixed(2))\r\n        setFactorStyle('red')\r\n        setPlayerActive(false)\r\n        socket.emit('get games', 'get')\r\n        setTimeout(() => {\r\n          setFactor(0)\r\n          finalFactor = 0\r\n          setFactorStyle('white')\r\n          ctx.clearRect(0, 0, 500, 300);\r\n          script1(10)\r\n        }, 2000)\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const sendForm = async (e) => {\r\n    e.preventDefault()\r\n    if (e.target[0].value !== ''){\r\n      if (!publicKey) {\r\n        const notify = () => toast(\"Connect your wallet first\");\r\n        return notify()\r\n      }\r\n      socket.emit('chat message', {\r\n        text: e.target[0].value,\r\n        wallet: base58\r\n      });\r\n      e.target[0].value = ''\r\n    }else{\r\n      const notify = () => toast(\"You cant send empty string\");\r\n      return notify()\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (betValue >=  0.00001 && betValue <= balance){\r\n      socket.emit('new bid', {\r\n        amount: betValue,\r\n        wallet: base58\r\n      })\r\n      setPlayerActive(false)\r\n    }else{\r\n      const notify = () => toast('Wrong amount')\r\n      notify()\r\n    }\r\n  }\r\n\r\n  const handleResult = async (e) => {\r\n    e.preventDefault()\r\n    console.log('alo')\r\n    socket.emit('take', base58)\r\n  }\r\n\r\n  useEffect(() => {\r\n    arr.push(factor)\r\n    sendToChart()\r\n  }, [factor])\r\n\r\n  const sendToChart = () => {\r\n    setChartData({\r\n      labels: [1, 2, 3, 4, 5],\r\n\r\n      datasets: [\r\n        {\r\n          label: 'crash',\r\n          data: factor !== 0 ? [1].concat(arr) : 0,\r\n          backgroundColor: \"rgba(75,192,192,0.2)\",\r\n          borderColor: \"rgba(75,192,192,1)\",\r\n          color: \"rgba(255, 255, 255,1)\",\r\n          pointRadius: 0,\r\n          borderDash: [35, 5],\r\n          lineTension: 0.1,\r\n        },\r\n      ],\r\n    });\r\n    setChartOptions({\r\n          events: [],\r\n          maintainAspectRatio: false,\r\n          elements: {\r\n            line: {\r\n              tension: 0.1\r\n            }\r\n          },\r\n          scales: {\r\n            yAxes: {\r\n              type: 'linear',\r\n\r\n              title: {\r\n                display: false,\r\n                text: 'value'\r\n              },\r\n              min: 1,\r\n              max: (factor > 2 ? (factor) : (2)),\r\n              ticks: {\r\n                color: \"rgba(255, 255, 255,1)\",\r\n                maxTicksLimit: 5,\r\n                callback: function (value, index, values) {\r\n                  if (value % 0.5 == 0) return (parseFloat(value)).toFixed(2)\r\n                }\r\n              },\r\n              grid: {\r\n                display: true,\r\n                color: 'white'\r\n              },\r\n            },\r\n            xAxes: {\r\n              type: 'linear',\r\n              title: {\r\n                display: false,\r\n                text: 'value'\r\n              },\r\n              max: (factor > 2 ? (factor) : (2)),\r\n              ticks: {\r\n                color: \"rgba(255, 255, 255,1)\",\r\n\r\n                maxTicksLimit: 5,\r\n                callback: function (value, index, values) {\r\n                  if (1 < 10) {\r\n                    if (value % 1 == 0) return value\r\n                  } else {\r\n                    if (value % 10 == 0) return value\r\n                  }\r\n                }\r\n              },\r\n              grid: {\r\n                display: true,\r\n                color: 'white'\r\n              },\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: { display: false },\r\n          },\r\n          animation: {\r\n            x: {\r\n              type: 'number',\r\n              easing: 'linear',\r\n              duration: 0,\r\n              from: 5,\r\n              delay: 0\r\n            },\r\n            y: {\r\n              type: 'number',\r\n              easing: 'linear',\r\n              duration: 0,\r\n              from: 5,\r\n              delay: 0\r\n            },\r\n            loop: true,\r\n          },\r\n        }\r\n    );\r\n  }\r\n\r\n  const onWithdraw = async (e) => {\r\n    e.preventDefault()\r\n    try{\r\n      const money = sum * 1\r\n      let data;\r\n      const gamess = await fetch(`${ENDPOINT}flip`).then(result => {\r\n        return result.json()\r\n      })\r\n\r\n      data = gamess\r\n      console.log(data)\r\n      let bob = 0\r\n      data.map((user) => {\r\n        if (user.wallet === base58){\r\n          bob = user.balance\r\n        }})\r\n      console.log(bob)\r\n      if (money <= bob){\r\n        await fetch(`${ENDPOINT}flip`,\r\n            {\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n              method: \"PUT\",\r\n              body: JSON.stringify({amount: -money, walletAddress: base58})\r\n            })\r\n      }else{\r\n        const notify = () => toast('Not enough on balance');\r\n        notify();\r\n        return () => {};\r\n      }\r\n      const notifu = () => toast('Please wait. Proccessing//...//');\r\n      notifu();\r\n      const ref_payer = Keypair.fromSecretKey(bs58.decode(\"4YXbzB2u2L23QUAYen5bfhUofc9KTovPQNMeAbdKBBfk7HNEkSwJfGRMZkGt5FsKkejLVWxAjQ1kPhHXoetmaWYb\"))\r\n      const wallet1 = new NodeWallet(ref_payer);\r\n      const networkName = \"mainnet\";\r\n      const connection = new Connection(\"https://api.metaplex.solana.com/\");\r\n      const provider = new AnchorProvider(connection, wallet1, {});\r\n      const ts5 = new Transaction().add(SystemProgram.transfer({\r\n        fromPubkey: ref_payer.publicKey,\r\n        toPubkey: publicKey,\r\n        lamports: money * LAMPORTS_PER_SOL,\r\n      }));\r\n      const result3 = await provider.sendAndConfirm(ts5, [ref_payer]).then(() => {\r\n        const notify = () => toast('Sent succesfully');\r\n        notify();\r\n      });\r\n\r\n      socket.emit('request balance', publicKey.toBase58())\r\n      setPopup(false)\r\n      const notify = () => toast('success');\r\n      notify()\r\n    }catch (e) {\r\n      setPopup(false)\r\n      console.log(e)\r\n      const notify = () => toast(\"You cant withdraw. Sorry\");\r\n      notify()\r\n    }\r\n\r\n  }\r\n\r\n  const onDeposit = async (e) => {\r\n    e.preventDefault()\r\n    if (!publicKey) throw new WalletNotConnectedError();\r\n    try {\r\n      let wallet = new PublicKey(\"3rAY5AUTwaQDzoFMN6TDgH6mW9fT6bqmT8rcgzKHSjVV\");\r\n      const transaction = new Transaction().add(\r\n          SystemProgram.transfer({\r\n            fromPubkey: publicKey,\r\n            toPubkey: wallet,\r\n            lamports: sum * LAMPORTS_PER_SOL,\r\n          })\r\n      );\r\n\r\n      const {\r\n        context: { slot: minContextSlot },\r\n        value: { blockhash, lastValidBlockHeight }\r\n      } = await connection.getLatestBlockhashAndContext();\r\n      const signature = await sendTransaction(transaction, connection, { minContextSlot });\r\n      await connection.confirmTransaction({ blockhash, lastValidBlockHeight, signature });\r\n      console.log(\"Баланс будет изменен на \" + sum * 1)\r\n      await fetch(`${ENDPOINT}flip`,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            method: \"PUT\",\r\n            body: JSON.stringify({amount: sum * 1, walletAddress: base58})\r\n          })\r\n\r\n      socket.emit('request balance', publicKey.toBase58())\r\n      setPopup2(false)\r\n      const notify = () => toast('Deposited successfully. Please reload the site');\r\n      notify()\r\n    }catch (e){\r\n      setPopup2(false)\r\n      const notify = () => toast(e.toString());\r\n      notify()\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n        <Layout>\r\n          <Container parentClass=\"body-crash\">\r\n\r\n            <Popup popup={popup} setPopup={setPopup}>\r\n              <form onSubmit={onWithdraw}>\r\n                <h1>Withdraw form</h1>\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"bet\" className=\"colorMain\">Enter Amount</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"bet\" placeholder=\"0.00\" value={sum}  onChange={e => setSum(e.target.value)} min=\"0.0001\" max={balance}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"w-100 active_btn fw-light text-uppercase py-2 h5 mt-4 text-white\" >withdraw</button>\r\n                <p>dont close this window on withdraw</p>\r\n              </form>\r\n            </Popup>\r\n            <Popup popup={popup2} setPopup={setPopup2}>\r\n              <form onSubmit={onDeposit}>\r\n                <h1>Deposit form</h1>\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"bet\">Enter Amount</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"bet\" placeholder=\"0.001\" value={sum}  onChange={e => setSum(e.target.value)} min=\"0.0001\" max={balance}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"w-100 active_btn fw-light text-uppercase py-2 h5 mt-4 text-white\" >DEPOSIT</button>\r\n              </form>\r\n            </Popup>\r\n            <ToastContainer />\r\n            <div className='btnDpWt'>\r\n              <button className=\"button-29\" onClick={() => setPopup2(true)}>Deposit</button>\r\n              <button className=\"button-29\" onClick={() => setPopup(true)}>Withdraw</button>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-11 mx-auto\">\r\n                <div className=\"row gy-5\">\r\n\r\n\r\n                  {/*crash chart*/}\r\n\r\n                  <div className=\"col-12 col-lg-8\" style={{justifyContent: 'center' }}>\r\n                    <h1 style={{color: factorStyle, textAlign: 'center'}} className='textCenter my-5 mx-lg-5'>{factor !== 0 ? factor + 'X' : timerBack}</h1>\r\n                    <canvas id=\"canvas\" style={{position: 'absolute', width: '300'}} className='crashChart'/>\r\n                    {chartData ? (<SomeChart chartData={chartData} chartOptions={chartOptions} />) : ('')}\r\n                  </div>\r\n\r\n                  {/*interface*/}\r\n                  <div className=\"col-12 col-lg-4\">\r\n                    <div style={{justifyContent: \"center\"}} className='mb-3'>\r\n                      <button type=\"button\" className=\"btn btn-outline-primary mx-1\" onClick={() => setBetValue(0.0001)}>min</button>\r\n                      <button type=\"button\" className=\"btn btn-outline-primary mx-1\" onClick={() => setBetValue(betValue / 2)}>1/2</button>\r\n                      <button type=\"button\" className=\"btn btn-outline-primary mx-1\" onClick={() => setBetValue(betValue * 2)}>x2</button>\r\n                      <button type=\"button\" className=\"btn btn-outline-primary mx-1\" onClick={() => setBetValue(balance)}>max</button>\r\n                    </div>\r\n                    {!playerActive ?  (<form onSubmit={handleSubmit}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <label htmlFor=\"bet\" className=\"colorMain\">Bet</label>\r\n                          <input type=\"text\" className=\"form-control\" id=\"bet\" placeholder=\"0.00\" value={betValue}  onChange={e => setBetValue(e.target.value)} min=\"0.0001\" max={balance}/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          <label htmlFor=\"Autostop\" className=\"colorMain\">Auto Stop</label>\r\n                          <input type=\"text\" className=\"form-control\" id=\"Autostop\" placeholder=\"1.00\" disabled=\"true\"/>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"w-100 active_btn fw-light text-uppercase py-2 h5 mt-4 text-white\" disabled={disabled} id='playBtn'>make a bid</button>\r\n                      </div>\r\n                    </form>) : (\r\n                        <form onSubmit={handleResult}>\r\n                          <div className=\"row\">\r\n                            <div className=\"col\">\r\n                              <label htmlFor=\"bet\">Bet</label>\r\n                              <input type=\"text\" className=\"form-control\" id=\"bet\" placeholder=\"0.00\" value={betValue}  onChange={e => setBetValue(e.target.value)} min=\"0.0001\" max={balance}/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                              <label htmlFor=\"Autostop\">Auto Stop</label>\r\n                              <input type=\"text\" className=\"form-control\" id=\"Autostop\" placeholder=\"1.00\" disabled=\"true\"/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"w-100 active_btn fw-light text-uppercase py-2 h5 mt-4 text-white\" id='playBtn' disabled={!canTake}>{takeButtonText}</button>\r\n                          </div>\r\n                        </form>\r\n                    )\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"percent-line mt-4 mb-5\">\r\n              {arrLastGames.map((game) => {\r\n                return (\r\n                    <div\r\n                        className={`g-line p-line fw-bold ChakraPetch`}>{game.finalFactor}x</div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"col-12 col-lg-8\">\r\n              <h1 className='colorMain'>online chat</h1>\r\n              <ul id=\"messages\">\r\n              </ul>\r\n              <form id=\"form\" onSubmit={sendForm}>\r\n\r\n                <input id=\"input\" autoComplete=\"off\"/>\r\n                <button>Send</button>\r\n              </form>\r\n            </div>\r\n\r\n\r\n            {/*<div className=\"row gy-4 gx-0 place-your-bet\">*/}\r\n            {/*  <div className=\"col-12 col-lg-11 mx-auto\">*/}\r\n            {/*    <div className=\"row\">*/}\r\n            {/*      <div className=\"col-12 col-lg-6\">*/}\r\n            {/*        {[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].map((res, i) => {*/}\r\n            {/*          return (*/}\r\n            {/*              <div*/}\r\n            {/*                  key={i}*/}\r\n            {/*                  className=\"ChakraPetch col-12 d-flex justify-content-between align-items-center ps-5\"*/}\r\n            {/*              >*/}\r\n            {/*                <div className=\"rooster\">ROOSTER</div>*/}\r\n            {/*                <div>Cash out at 2.34</div>*/}\r\n            {/*                <div className=\"doubled_btn px-3 py-2\">4.65 SOL</div>*/}\r\n            {/*              </div>*/}\r\n            {/*          );*/}\r\n            {/*        })}*/}\r\n            {/*      </div>*/}\r\n            {/*      <div className=\"col-12 col-lg-6\">*/}\r\n            {/*        {[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].map((res, i) => {*/}\r\n            {/*          return (*/}\r\n            {/*              <div*/}\r\n            {/*                  key={i}*/}\r\n            {/*                  className=\"ChakraPetch ChakraPetch2 col-12 d-flex justify-content-between align-items-center ps-5\"*/}\r\n            {/*              >*/}\r\n            {/*                <div className=\"rooster\">ROOSTER</div>*/}\r\n            {/*                <div>Cash out at 2.34</div>*/}\r\n            {/*                <div className=\"doubled_btn px-3 py-2\">4.65 SOL</div>*/}\r\n            {/*              </div>*/}\r\n            {/*          );*/}\r\n            {/*        })}*/}\r\n            {/*      </div>*/}\r\n            {/*    </div>*/}\r\n            {/*  </div>*/}\r\n            {/*</div>*/}\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </Container>\r\n        </Layout>\r\n  );\r\n};\r\n\r\nexport default Crash;\r\n","import React from \"react\";\r\nimport Layout from \"../layout\";\r\nimport Container from \"../layout/Container\";\r\n\r\nconst ComingSoon = () => {\r\n    return (\r\n        <Layout>\r\n            <Container parentClass=\"body-coming-soon\">\r\n                <h1 className=\"text-center py-5 my-5 display-4\">Coming Soon</h1>\r\n            </Container>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ComingSoon;\r\n","import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/styles.scss\";\nimport \"bootstrap\";\n\n\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport { Route, Routes } from \"react-router-dom\";\n\n// IMPORTS\nimport Home from \"./pages/Home\";\nimport Home2 from \"./pages/Home2\";\nimport Users from \"./pages/Users\";\nimport Crash from \"./pages/Crash\";\nimport ComingSoon from \"./pages/Faq\";\nimport {BalanceProvider} from \"./BalanceContext\";\nimport { useMemo, useState} from \"react\";\nimport { ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n    getPhantomWallet,\n    getSlopeWallet,\n    getSolflareWallet,\n    getSolletExtensionWallet,\n    getSolletWallet,\n    getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\nimport {\n    WalletModalProvider,\n    \n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\n// const ENDPOINT = 'https://casinoghostbackend.herokuapp.com/'\n// let socket;\n\nfunction App() {\n    const network = \"mainnet\";\n    const endpoint = \"https://api.metaplex.solana.com/\";\n    const [userBalance, setUserBalance] = useState(0)\n\n\n\n    const wallets = useMemo(\n        () => [\n            getPhantomWallet(),\n            getSlopeWallet(),\n            getSolflareWallet(),\n            getSolletExtensionWallet(),\n            getSolletWallet(),\n            getTorusWallet(),\n        ], [network]);\n\n  return (\n    <>\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} autoConnect>\n                <WalletModalProvider>\n                    <BalanceProvider>\n                    <Routes>\n                        <Route exact path=\"/\" element={<Crash />} />\n                        {/*<Route exact path=\"/flip\" element={<Home />} />*/}\n                        {/*<Route exact path=\"/users\" element={<Users />} />*/}\n                        {/*<Route exact path=\"/crash\" element={<Crash />} />*/}\n                        <Route exact path=\"/soon\" element={<ComingSoon />} />\n                    </Routes>\n                    </BalanceProvider>\n                </WalletModalProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { BrowserRouter as Route } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Route>\n    <App />\n  </Route>\n);\n"],"sourceRoot":""}